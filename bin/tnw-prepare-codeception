#!/usr/bin/env bash

function tnw-prepare-codeception {
	TNW_OLD_PHANTOMJS_PATH=${TNW_OLD_PHANTOMJS_PATH-/usr/bin/phantomjs}
	TNW_CODECEPTION_YML=${TNW_CODECEPTION_YML=$TRAVIS_BUILD_DIR/codeception.yml}
	TNW_CODECEPTION_DIST_YML=${TNW_CODECEPTION_DIST_YML=$TRAVIS_BUILD_DIR/codeception.dist.yml}

  WP_CORE_DIR=${WP_CORE_DIR-/tmp/wordpress/}
	DB_DUMP=${DB_DUMP-$TRAVIS_BUILD_DIR/tests/_data/dump.sql}
	DB_NAME_INT=${DB_NAME_INT-wordpress_int}

	# Codeception Config
	if [ -f $TNW_CODECEPTION_YML ]; then
 		sed -i "s_'$TNW_OLD_PHANTOMJS_PATH'_'$(which phantomjs)'_" $TNW_CODECEPTION_YML;
	fi
	if [ -f $TNW_CODECEPTION_DIST_YML ]; then
		sed -i "s_'$TNW_OLD_PHANTOMJS_PATH'_'$(which phantomjs)'_" $TNW_CODECEPTION_DIST_YML;
	fi

	# Prepare WordPress database dump
	mysql -u root -e "create database IF NOT EXISTS $DB_NAME_INT"

	if [ -f $DB_DUMP ]; then
		# Import DB dump
		wp db import $DB_DUMP --path=$WP_CORE_DIR;
	else
		# Create directory if not exists
		mkdir -p "$(dirname "$DB_DUMP")";
	fi

	# Upgrade DB
	wp core update-db --path=$WP_CORE_DIR
	# Export a dump of the just installed database to the _data folder
  wp db export $DB_DUMP --path=$WP_CORE_DIR
}

tnw-prepare-codeception
